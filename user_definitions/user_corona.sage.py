

# This file was *autogenerated* from the file user_corona.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
def corona_product(G, H):
    """
    Computes the corona product of two graphs G and H.
    """
    result = Graph()
    n = G.order()
    m = H.order()
    result.add_vertices(range(n))
    result.add_edges(G.edges())
    for u in G.vertices():
        H_vertices = [n + u * m + v for v in H.vertices()]
        result.add_vertices(H_vertices)
        for (v1, v2) in H.edges():
            result.add_edge(n + u * m + v1, n + u * m + v2)
        for v in H.vertices():
            result.add_edge(u, n + u * m + v)
    
    return result

def is_corona(g):
    n = g.order()
    if n % _sage_const_2  != _sage_const_0 :
        return False
    deg1 = sum(_sage_const_1  for v in g.vertices() if g.degree(v) == _sage_const_1 )
    if deg1 != n // _sage_const_2 :
        return False
    for v in g.vertices():
        if g.degree(v) > _sage_const_1 :
            if sum(_sage_const_1  for u in g.neighbors(v) if g.degree(u) == _sage_const_1 ) != _sage_const_1 :
                return False
    return True

